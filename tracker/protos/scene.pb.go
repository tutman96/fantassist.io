// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.21.12
// source: protos/scene.proto

package tracker

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Layer_LayerType int32

const (
	Layer_ASSETS  Layer_LayerType = 0
	Layer_FOG     Layer_LayerType = 1
	Layer_MARKERS Layer_LayerType = 2
)

// Enum value maps for Layer_LayerType.
var (
	Layer_LayerType_name = map[int32]string{
		0: "ASSETS",
		1: "FOG",
		2: "MARKERS",
	}
	Layer_LayerType_value = map[string]int32{
		"ASSETS":  0,
		"FOG":     1,
		"MARKERS": 2,
	}
)

func (x Layer_LayerType) Enum() *Layer_LayerType {
	p := new(Layer_LayerType)
	*p = x
	return p
}

func (x Layer_LayerType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Layer_LayerType) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_scene_proto_enumTypes[0].Descriptor()
}

func (Layer_LayerType) Type() protoreflect.EnumType {
	return &file_protos_scene_proto_enumTypes[0]
}

func (x Layer_LayerType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Layer_LayerType.Descriptor instead.
func (Layer_LayerType) EnumDescriptor() ([]byte, []int) {
	return file_protos_scene_proto_rawDescGZIP(), []int{4, 0}
}

type AssetLayer_Asset_AssetType int32

const (
	AssetLayer_Asset_IMAGE AssetLayer_Asset_AssetType = 0
	AssetLayer_Asset_VIDEO AssetLayer_Asset_AssetType = 1
)

// Enum value maps for AssetLayer_Asset_AssetType.
var (
	AssetLayer_Asset_AssetType_name = map[int32]string{
		0: "IMAGE",
		1: "VIDEO",
	}
	AssetLayer_Asset_AssetType_value = map[string]int32{
		"IMAGE": 0,
		"VIDEO": 1,
	}
)

func (x AssetLayer_Asset_AssetType) Enum() *AssetLayer_Asset_AssetType {
	p := new(AssetLayer_Asset_AssetType)
	*p = x
	return p
}

func (x AssetLayer_Asset_AssetType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AssetLayer_Asset_AssetType) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_scene_proto_enumTypes[1].Descriptor()
}

func (AssetLayer_Asset_AssetType) Type() protoreflect.EnumType {
	return &file_protos_scene_proto_enumTypes[1]
}

func (x AssetLayer_Asset_AssetType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AssetLayer_Asset_AssetType.Descriptor instead.
func (AssetLayer_Asset_AssetType) EnumDescriptor() ([]byte, []int) {
	return file_protos_scene_proto_rawDescGZIP(), []int{5, 1, 0}
}

type FogLayer_Polygon_PolygonType int32

const (
	FogLayer_Polygon_FOG               FogLayer_Polygon_PolygonType = 0
	FogLayer_Polygon_FOG_CLEAR         FogLayer_Polygon_PolygonType = 1
	FogLayer_Polygon_LIGHT_OBSTRUCTION FogLayer_Polygon_PolygonType = 2
)

// Enum value maps for FogLayer_Polygon_PolygonType.
var (
	FogLayer_Polygon_PolygonType_name = map[int32]string{
		0: "FOG",
		1: "FOG_CLEAR",
		2: "LIGHT_OBSTRUCTION",
	}
	FogLayer_Polygon_PolygonType_value = map[string]int32{
		"FOG":               0,
		"FOG_CLEAR":         1,
		"LIGHT_OBSTRUCTION": 2,
	}
)

func (x FogLayer_Polygon_PolygonType) Enum() *FogLayer_Polygon_PolygonType {
	p := new(FogLayer_Polygon_PolygonType)
	*p = x
	return p
}

func (x FogLayer_Polygon_PolygonType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FogLayer_Polygon_PolygonType) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_scene_proto_enumTypes[2].Descriptor()
}

func (FogLayer_Polygon_PolygonType) Type() protoreflect.EnumType {
	return &file_protos_scene_proto_enumTypes[2]
}

func (x FogLayer_Polygon_PolygonType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FogLayer_Polygon_PolygonType.Descriptor instead.
func (FogLayer_Polygon_PolygonType) EnumDescriptor() ([]byte, []int) {
	return file_protos_scene_proto_rawDescGZIP(), []int{6, 1, 0}
}

type Scene struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string        `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name    string        `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Version uint64        `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	Table   *TableOptions `protobuf:"bytes,4,opt,name=table,proto3" json:"table,omitempty"`
	Layers  []*Layer      `protobuf:"bytes,5,rep,name=layers,proto3" json:"layers,omitempty"`
}

func (x *Scene) Reset() {
	*x = Scene{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_scene_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Scene) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Scene) ProtoMessage() {}

func (x *Scene) ProtoReflect() protoreflect.Message {
	mi := &file_protos_scene_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Scene.ProtoReflect.Descriptor instead.
func (*Scene) Descriptor() ([]byte, []int) {
	return file_protos_scene_proto_rawDescGZIP(), []int{0}
}

func (x *Scene) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Scene) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Scene) GetVersion() uint64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *Scene) GetTable() *TableOptions {
	if x != nil {
		return x.Table
	}
	return nil
}

func (x *Scene) GetLayers() []*Layer {
	if x != nil {
		return x.Layers
	}
	return nil
}

type TableOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DisplayGrid bool      `protobuf:"varint,1,opt,name=displayGrid,proto3" json:"displayGrid,omitempty"`
	Offset      *Vector2D `protobuf:"bytes,2,opt,name=offset,proto3" json:"offset,omitempty"`
	Rotation    float64   `protobuf:"fixed64,3,opt,name=rotation,proto3" json:"rotation,omitempty"`
	Scale       float64   `protobuf:"fixed64,4,opt,name=scale,proto3" json:"scale,omitempty"`
}

func (x *TableOptions) Reset() {
	*x = TableOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_scene_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TableOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TableOptions) ProtoMessage() {}

func (x *TableOptions) ProtoReflect() protoreflect.Message {
	mi := &file_protos_scene_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TableOptions.ProtoReflect.Descriptor instead.
func (*TableOptions) Descriptor() ([]byte, []int) {
	return file_protos_scene_proto_rawDescGZIP(), []int{1}
}

func (x *TableOptions) GetDisplayGrid() bool {
	if x != nil {
		return x.DisplayGrid
	}
	return false
}

func (x *TableOptions) GetOffset() *Vector2D {
	if x != nil {
		return x.Offset
	}
	return nil
}

func (x *TableOptions) GetRotation() float64 {
	if x != nil {
		return x.Rotation
	}
	return 0
}

func (x *TableOptions) GetScale() float64 {
	if x != nil {
		return x.Scale
	}
	return 0
}

type Vector2D struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	X float64 `protobuf:"fixed64,1,opt,name=x,proto3" json:"x,omitempty"`
	Y float64 `protobuf:"fixed64,2,opt,name=y,proto3" json:"y,omitempty"`
}

func (x *Vector2D) Reset() {
	*x = Vector2D{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_scene_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Vector2D) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Vector2D) ProtoMessage() {}

func (x *Vector2D) ProtoReflect() protoreflect.Message {
	mi := &file_protos_scene_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Vector2D.ProtoReflect.Descriptor instead.
func (*Vector2D) Descriptor() ([]byte, []int) {
	return file_protos_scene_proto_rawDescGZIP(), []int{2}
}

func (x *Vector2D) GetX() float64 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *Vector2D) GetY() float64 {
	if x != nil {
		return x.Y
	}
	return 0
}

type Size struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Width  float64 `protobuf:"fixed64,1,opt,name=width,proto3" json:"width,omitempty"`
	Height float64 `protobuf:"fixed64,2,opt,name=height,proto3" json:"height,omitempty"`
}

func (x *Size) Reset() {
	*x = Size{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_scene_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Size) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Size) ProtoMessage() {}

func (x *Size) ProtoReflect() protoreflect.Message {
	mi := &file_protos_scene_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Size.ProtoReflect.Descriptor instead.
func (*Size) Descriptor() ([]byte, []int) {
	return file_protos_scene_proto_rawDescGZIP(), []int{3}
}

func (x *Size) GetWidth() float64 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *Size) GetHeight() float64 {
	if x != nil {
		return x.Height
	}
	return 0
}

type Layer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to LayerType:
	//
	//	*Layer_AssetLayer
	//	*Layer_FogLayer
	//	*Layer_MarkerLayer
	LayerType isLayer_LayerType `protobuf_oneof:"layerType"`
}

func (x *Layer) Reset() {
	*x = Layer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_scene_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Layer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Layer) ProtoMessage() {}

func (x *Layer) ProtoReflect() protoreflect.Message {
	mi := &file_protos_scene_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Layer.ProtoReflect.Descriptor instead.
func (*Layer) Descriptor() ([]byte, []int) {
	return file_protos_scene_proto_rawDescGZIP(), []int{4}
}

func (m *Layer) GetLayerType() isLayer_LayerType {
	if m != nil {
		return m.LayerType
	}
	return nil
}

func (x *Layer) GetAssetLayer() *AssetLayer {
	if x, ok := x.GetLayerType().(*Layer_AssetLayer); ok {
		return x.AssetLayer
	}
	return nil
}

func (x *Layer) GetFogLayer() *FogLayer {
	if x, ok := x.GetLayerType().(*Layer_FogLayer); ok {
		return x.FogLayer
	}
	return nil
}

func (x *Layer) GetMarkerLayer() *MarkerLayer {
	if x, ok := x.GetLayerType().(*Layer_MarkerLayer); ok {
		return x.MarkerLayer
	}
	return nil
}

type isLayer_LayerType interface {
	isLayer_LayerType()
}

type Layer_AssetLayer struct {
	AssetLayer *AssetLayer `protobuf:"bytes,1,opt,name=assetLayer,proto3,oneof"`
}

type Layer_FogLayer struct {
	FogLayer *FogLayer `protobuf:"bytes,2,opt,name=fogLayer,proto3,oneof"`
}

type Layer_MarkerLayer struct {
	MarkerLayer *MarkerLayer `protobuf:"bytes,3,opt,name=markerLayer,proto3,oneof"`
}

func (*Layer_AssetLayer) isLayer_LayerType() {}

func (*Layer_FogLayer) isLayer_LayerType() {}

func (*Layer_MarkerLayer) isLayer_LayerType() {}

type AssetLayer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string                       `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name    string                       `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Visible bool                         `protobuf:"varint,4,opt,name=visible,proto3" json:"visible,omitempty"`
	Type    Layer_LayerType              `protobuf:"varint,5,opt,name=type,proto3,enum=Layer_LayerType" json:"type,omitempty"`
	Assets  map[string]*AssetLayer_Asset `protobuf:"bytes,6,rep,name=assets,proto3" json:"assets,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *AssetLayer) Reset() {
	*x = AssetLayer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_scene_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssetLayer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssetLayer) ProtoMessage() {}

func (x *AssetLayer) ProtoReflect() protoreflect.Message {
	mi := &file_protos_scene_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssetLayer.ProtoReflect.Descriptor instead.
func (*AssetLayer) Descriptor() ([]byte, []int) {
	return file_protos_scene_proto_rawDescGZIP(), []int{5}
}

func (x *AssetLayer) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AssetLayer) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AssetLayer) GetVisible() bool {
	if x != nil {
		return x.Visible
	}
	return false
}

func (x *AssetLayer) GetType() Layer_LayerType {
	if x != nil {
		return x.Type
	}
	return Layer_ASSETS
}

func (x *AssetLayer) GetAssets() map[string]*AssetLayer_Asset {
	if x != nil {
		return x.Assets
	}
	return nil
}

type FogLayer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                  string                  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                string                  `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Visible             bool                    `protobuf:"varint,4,opt,name=visible,proto3" json:"visible,omitempty"`
	Type                Layer_LayerType         `protobuf:"varint,5,opt,name=type,proto3,enum=Layer_LayerType" json:"type,omitempty"`
	LightSources        []*FogLayer_LightSource `protobuf:"bytes,6,rep,name=lightSources,proto3" json:"lightSources,omitempty"`
	ObstructionPolygons []*FogLayer_Polygon     `protobuf:"bytes,7,rep,name=obstructionPolygons,proto3" json:"obstructionPolygons,omitempty"`
	FogPolygons         []*FogLayer_Polygon     `protobuf:"bytes,8,rep,name=fogPolygons,proto3" json:"fogPolygons,omitempty"`
	FogClearPolygons    []*FogLayer_Polygon     `protobuf:"bytes,9,rep,name=fogClearPolygons,proto3" json:"fogClearPolygons,omitempty"`
}

func (x *FogLayer) Reset() {
	*x = FogLayer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_scene_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FogLayer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FogLayer) ProtoMessage() {}

func (x *FogLayer) ProtoReflect() protoreflect.Message {
	mi := &file_protos_scene_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FogLayer.ProtoReflect.Descriptor instead.
func (*FogLayer) Descriptor() ([]byte, []int) {
	return file_protos_scene_proto_rawDescGZIP(), []int{6}
}

func (x *FogLayer) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *FogLayer) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FogLayer) GetVisible() bool {
	if x != nil {
		return x.Visible
	}
	return false
}

func (x *FogLayer) GetType() Layer_LayerType {
	if x != nil {
		return x.Type
	}
	return Layer_ASSETS
}

func (x *FogLayer) GetLightSources() []*FogLayer_LightSource {
	if x != nil {
		return x.LightSources
	}
	return nil
}

func (x *FogLayer) GetObstructionPolygons() []*FogLayer_Polygon {
	if x != nil {
		return x.ObstructionPolygons
	}
	return nil
}

func (x *FogLayer) GetFogPolygons() []*FogLayer_Polygon {
	if x != nil {
		return x.FogPolygons
	}
	return nil
}

func (x *FogLayer) GetFogClearPolygons() []*FogLayer_Polygon {
	if x != nil {
		return x.FogClearPolygons
	}
	return nil
}

type MarkerLayer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string          `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name    string          `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Visible bool            `protobuf:"varint,4,opt,name=visible,proto3" json:"visible,omitempty"`
	Type    Layer_LayerType `protobuf:"varint,5,opt,name=type,proto3,enum=Layer_LayerType" json:"type,omitempty"`
	Markers []*Marker       `protobuf:"bytes,6,rep,name=markers,proto3" json:"markers,omitempty"`
}

func (x *MarkerLayer) Reset() {
	*x = MarkerLayer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_scene_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarkerLayer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkerLayer) ProtoMessage() {}

func (x *MarkerLayer) ProtoReflect() protoreflect.Message {
	mi := &file_protos_scene_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkerLayer.ProtoReflect.Descriptor instead.
func (*MarkerLayer) Descriptor() ([]byte, []int) {
	return file_protos_scene_proto_rawDescGZIP(), []int{7}
}

func (x *MarkerLayer) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *MarkerLayer) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MarkerLayer) GetVisible() bool {
	if x != nil {
		return x.Visible
	}
	return false
}

func (x *MarkerLayer) GetType() Layer_LayerType {
	if x != nil {
		return x.Type
	}
	return Layer_ASSETS
}

func (x *MarkerLayer) GetMarkers() []*Marker {
	if x != nil {
		return x.Markers
	}
	return nil
}

type Marker struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    string            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Asset *AssetLayer_Asset `protobuf:"bytes,2,opt,name=asset,proto3" json:"asset,omitempty"`
}

func (x *Marker) Reset() {
	*x = Marker{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_scene_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Marker) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Marker) ProtoMessage() {}

func (x *Marker) ProtoReflect() protoreflect.Message {
	mi := &file_protos_scene_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Marker.ProtoReflect.Descriptor instead.
func (*Marker) Descriptor() ([]byte, []int) {
	return file_protos_scene_proto_rawDescGZIP(), []int{8}
}

func (x *Marker) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Marker) GetAsset() *AssetLayer_Asset {
	if x != nil {
		return x.Asset
	}
	return nil
}

type SceneExport struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Scene *Scene              `protobuf:"bytes,1,opt,name=scene,proto3" json:"scene,omitempty"`
	Files []*SceneExport_File `protobuf:"bytes,2,rep,name=files,proto3" json:"files,omitempty"`
}

func (x *SceneExport) Reset() {
	*x = SceneExport{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_scene_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SceneExport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SceneExport) ProtoMessage() {}

func (x *SceneExport) ProtoReflect() protoreflect.Message {
	mi := &file_protos_scene_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SceneExport.ProtoReflect.Descriptor instead.
func (*SceneExport) Descriptor() ([]byte, []int) {
	return file_protos_scene_proto_rawDescGZIP(), []int{9}
}

func (x *SceneExport) GetScene() *Scene {
	if x != nil {
		return x.Scene
	}
	return nil
}

func (x *SceneExport) GetFiles() []*SceneExport_File {
	if x != nil {
		return x.Files
	}
	return nil
}

type AssetLayer_Asset struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string                             `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Type        AssetLayer_Asset_AssetType         `protobuf:"varint,2,opt,name=type,proto3,enum=AssetLayer_Asset_AssetType" json:"type,omitempty"`
	Size        *Size                              `protobuf:"bytes,3,opt,name=size,proto3" json:"size,omitempty"`
	Transform   *AssetLayer_Asset_AssetTransform   `protobuf:"bytes,4,opt,name=transform,proto3" json:"transform,omitempty"`
	Calibration *AssetLayer_Asset_AssetCalibration `protobuf:"bytes,5,opt,name=calibration,proto3,oneof" json:"calibration,omitempty"`
	SnapToGrid  *bool                              `protobuf:"varint,6,opt,name=snapToGrid,proto3,oneof" json:"snapToGrid,omitempty"`
}

func (x *AssetLayer_Asset) Reset() {
	*x = AssetLayer_Asset{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_scene_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssetLayer_Asset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssetLayer_Asset) ProtoMessage() {}

func (x *AssetLayer_Asset) ProtoReflect() protoreflect.Message {
	mi := &file_protos_scene_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssetLayer_Asset.ProtoReflect.Descriptor instead.
func (*AssetLayer_Asset) Descriptor() ([]byte, []int) {
	return file_protos_scene_proto_rawDescGZIP(), []int{5, 1}
}

func (x *AssetLayer_Asset) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AssetLayer_Asset) GetType() AssetLayer_Asset_AssetType {
	if x != nil {
		return x.Type
	}
	return AssetLayer_Asset_IMAGE
}

func (x *AssetLayer_Asset) GetSize() *Size {
	if x != nil {
		return x.Size
	}
	return nil
}

func (x *AssetLayer_Asset) GetTransform() *AssetLayer_Asset_AssetTransform {
	if x != nil {
		return x.Transform
	}
	return nil
}

func (x *AssetLayer_Asset) GetCalibration() *AssetLayer_Asset_AssetCalibration {
	if x != nil {
		return x.Calibration
	}
	return nil
}

func (x *AssetLayer_Asset) GetSnapToGrid() bool {
	if x != nil && x.SnapToGrid != nil {
		return *x.SnapToGrid
	}
	return false
}

type AssetLayer_Asset_AssetTransform struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	X        float64 `protobuf:"fixed64,1,opt,name=x,proto3" json:"x,omitempty"`
	Y        float64 `protobuf:"fixed64,2,opt,name=y,proto3" json:"y,omitempty"`
	Rotation float64 `protobuf:"fixed64,3,opt,name=rotation,proto3" json:"rotation,omitempty"`
	Width    float64 `protobuf:"fixed64,4,opt,name=width,proto3" json:"width,omitempty"`
	Height   float64 `protobuf:"fixed64,5,opt,name=height,proto3" json:"height,omitempty"`
}

func (x *AssetLayer_Asset_AssetTransform) Reset() {
	*x = AssetLayer_Asset_AssetTransform{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_scene_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssetLayer_Asset_AssetTransform) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssetLayer_Asset_AssetTransform) ProtoMessage() {}

func (x *AssetLayer_Asset_AssetTransform) ProtoReflect() protoreflect.Message {
	mi := &file_protos_scene_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssetLayer_Asset_AssetTransform.ProtoReflect.Descriptor instead.
func (*AssetLayer_Asset_AssetTransform) Descriptor() ([]byte, []int) {
	return file_protos_scene_proto_rawDescGZIP(), []int{5, 1, 0}
}

func (x *AssetLayer_Asset_AssetTransform) GetX() float64 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *AssetLayer_Asset_AssetTransform) GetY() float64 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *AssetLayer_Asset_AssetTransform) GetRotation() float64 {
	if x != nil {
		return x.Rotation
	}
	return 0
}

func (x *AssetLayer_Asset_AssetTransform) GetWidth() float64 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *AssetLayer_Asset_AssetTransform) GetHeight() float64 {
	if x != nil {
		return x.Height
	}
	return 0
}

type AssetLayer_Asset_AssetCalibration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	XOffset float32 `protobuf:"fixed32,1,opt,name=xOffset,proto3" json:"xOffset,omitempty"`
	YOffset float32 `protobuf:"fixed32,2,opt,name=yOffset,proto3" json:"yOffset,omitempty"`
	PpiX    float32 `protobuf:"fixed32,3,opt,name=ppiX,proto3" json:"ppiX,omitempty"`
	PpiY    float32 `protobuf:"fixed32,4,opt,name=ppiY,proto3" json:"ppiY,omitempty"`
}

func (x *AssetLayer_Asset_AssetCalibration) Reset() {
	*x = AssetLayer_Asset_AssetCalibration{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_scene_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssetLayer_Asset_AssetCalibration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssetLayer_Asset_AssetCalibration) ProtoMessage() {}

func (x *AssetLayer_Asset_AssetCalibration) ProtoReflect() protoreflect.Message {
	mi := &file_protos_scene_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssetLayer_Asset_AssetCalibration.ProtoReflect.Descriptor instead.
func (*AssetLayer_Asset_AssetCalibration) Descriptor() ([]byte, []int) {
	return file_protos_scene_proto_rawDescGZIP(), []int{5, 1, 1}
}

func (x *AssetLayer_Asset_AssetCalibration) GetXOffset() float32 {
	if x != nil {
		return x.XOffset
	}
	return 0
}

func (x *AssetLayer_Asset_AssetCalibration) GetYOffset() float32 {
	if x != nil {
		return x.YOffset
	}
	return 0
}

func (x *AssetLayer_Asset_AssetCalibration) GetPpiX() float32 {
	if x != nil {
		return x.PpiX
	}
	return 0
}

func (x *AssetLayer_Asset_AssetCalibration) GetPpiY() float32 {
	if x != nil {
		return x.PpiY
	}
	return 0
}

type FogLayer_LightSource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Position            *Vector2D                   `protobuf:"bytes,1,opt,name=position,proto3" json:"position,omitempty"`
	BrightLightDistance float32                     `protobuf:"fixed32,2,opt,name=brightLightDistance,proto3" json:"brightLightDistance,omitempty"`
	DimLightDistance    float32                     `protobuf:"fixed32,3,opt,name=dimLightDistance,proto3" json:"dimLightDistance,omitempty"`
	Color               *FogLayer_LightSource_Color `protobuf:"bytes,4,opt,name=color,proto3" json:"color,omitempty"`
}

func (x *FogLayer_LightSource) Reset() {
	*x = FogLayer_LightSource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_scene_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FogLayer_LightSource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FogLayer_LightSource) ProtoMessage() {}

func (x *FogLayer_LightSource) ProtoReflect() protoreflect.Message {
	mi := &file_protos_scene_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FogLayer_LightSource.ProtoReflect.Descriptor instead.
func (*FogLayer_LightSource) Descriptor() ([]byte, []int) {
	return file_protos_scene_proto_rawDescGZIP(), []int{6, 0}
}

func (x *FogLayer_LightSource) GetPosition() *Vector2D {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *FogLayer_LightSource) GetBrightLightDistance() float32 {
	if x != nil {
		return x.BrightLightDistance
	}
	return 0
}

func (x *FogLayer_LightSource) GetDimLightDistance() float32 {
	if x != nil {
		return x.DimLightDistance
	}
	return 0
}

func (x *FogLayer_LightSource) GetColor() *FogLayer_LightSource_Color {
	if x != nil {
		return x.Color
	}
	return nil
}

type FogLayer_Polygon struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type           FogLayer_Polygon_PolygonType `protobuf:"varint,1,opt,name=type,proto3,enum=FogLayer_Polygon_PolygonType" json:"type,omitempty"`
	Verticies      []*Vector2D                  `protobuf:"bytes,2,rep,name=verticies,proto3" json:"verticies,omitempty"`
	VisibleOnTable bool                         `protobuf:"varint,3,opt,name=visibleOnTable,proto3" json:"visibleOnTable,omitempty"`
}

func (x *FogLayer_Polygon) Reset() {
	*x = FogLayer_Polygon{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_scene_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FogLayer_Polygon) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FogLayer_Polygon) ProtoMessage() {}

func (x *FogLayer_Polygon) ProtoReflect() protoreflect.Message {
	mi := &file_protos_scene_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FogLayer_Polygon.ProtoReflect.Descriptor instead.
func (*FogLayer_Polygon) Descriptor() ([]byte, []int) {
	return file_protos_scene_proto_rawDescGZIP(), []int{6, 1}
}

func (x *FogLayer_Polygon) GetType() FogLayer_Polygon_PolygonType {
	if x != nil {
		return x.Type
	}
	return FogLayer_Polygon_FOG
}

func (x *FogLayer_Polygon) GetVerticies() []*Vector2D {
	if x != nil {
		return x.Verticies
	}
	return nil
}

func (x *FogLayer_Polygon) GetVisibleOnTable() bool {
	if x != nil {
		return x.VisibleOnTable
	}
	return false
}

type FogLayer_LightSource_Color struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	R uint32 `protobuf:"varint,1,opt,name=r,proto3" json:"r,omitempty"`
	G uint32 `protobuf:"varint,2,opt,name=g,proto3" json:"g,omitempty"`
	B uint32 `protobuf:"varint,3,opt,name=b,proto3" json:"b,omitempty"`
	A uint32 `protobuf:"varint,4,opt,name=a,proto3" json:"a,omitempty"`
}

func (x *FogLayer_LightSource_Color) Reset() {
	*x = FogLayer_LightSource_Color{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_scene_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FogLayer_LightSource_Color) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FogLayer_LightSource_Color) ProtoMessage() {}

func (x *FogLayer_LightSource_Color) ProtoReflect() protoreflect.Message {
	mi := &file_protos_scene_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FogLayer_LightSource_Color.ProtoReflect.Descriptor instead.
func (*FogLayer_LightSource_Color) Descriptor() ([]byte, []int) {
	return file_protos_scene_proto_rawDescGZIP(), []int{6, 0, 0}
}

func (x *FogLayer_LightSource_Color) GetR() uint32 {
	if x != nil {
		return x.R
	}
	return 0
}

func (x *FogLayer_LightSource_Color) GetG() uint32 {
	if x != nil {
		return x.G
	}
	return 0
}

func (x *FogLayer_LightSource_Color) GetB() uint32 {
	if x != nil {
		return x.B
	}
	return 0
}

func (x *FogLayer_LightSource_Color) GetA() uint32 {
	if x != nil {
		return x.A
	}
	return 0
}

type SceneExport_File struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Payload   []byte `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
	MediaType string `protobuf:"bytes,3,opt,name=mediaType,proto3" json:"mediaType,omitempty"`
}

func (x *SceneExport_File) Reset() {
	*x = SceneExport_File{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_scene_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SceneExport_File) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SceneExport_File) ProtoMessage() {}

func (x *SceneExport_File) ProtoReflect() protoreflect.Message {
	mi := &file_protos_scene_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SceneExport_File.ProtoReflect.Descriptor instead.
func (*SceneExport_File) Descriptor() ([]byte, []int) {
	return file_protos_scene_proto_rawDescGZIP(), []int{9, 0}
}

func (x *SceneExport_File) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SceneExport_File) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *SceneExport_File) GetMediaType() string {
	if x != nil {
		return x.MediaType
	}
	return ""
}

var File_protos_scene_proto protoreflect.FileDescriptor

var file_protos_scene_proto_rawDesc = []byte{
	0x0a, 0x12, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8a, 0x01, 0x0a, 0x05, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x05,
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x54, 0x61,
	0x62, 0x6c, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x05, 0x74, 0x61, 0x62, 0x6c,
	0x65, 0x12, 0x1e, 0x0a, 0x06, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x06, 0x2e, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x06, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x73, 0x22, 0x85, 0x01, 0x0a, 0x0c, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x47, 0x72, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79,
	0x47, 0x72, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x32, 0x64, 0x52,
	0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x6f, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x72, 0x6f, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x05, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x22, 0x26, 0x0a, 0x08, 0x56, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x32, 0x64, 0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x01, 0x78, 0x12, 0x0c, 0x0a, 0x01, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x01,
	0x79, 0x22, 0x34, 0x0a, 0x04, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64,
	0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12,
	0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0xcd, 0x01, 0x0a, 0x05, 0x4c, 0x61, 0x79, 0x65,
	0x72, 0x12, 0x2d, 0x0a, 0x0a, 0x61, 0x73, 0x73, 0x65, 0x74, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x4c, 0x61, 0x79,
	0x65, 0x72, 0x48, 0x00, 0x52, 0x0a, 0x61, 0x73, 0x73, 0x65, 0x74, 0x4c, 0x61, 0x79, 0x65, 0x72,
	0x12, 0x27, 0x0a, 0x08, 0x66, 0x6f, 0x67, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x09, 0x2e, 0x46, 0x6f, 0x67, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x48, 0x00, 0x52,
	0x08, 0x66, 0x6f, 0x67, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x30, 0x0a, 0x0b, 0x6d, 0x61, 0x72,
	0x6b, 0x65, 0x72, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c,
	0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x72, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x48, 0x00, 0x52, 0x0b,
	0x6d, 0x61, 0x72, 0x6b, 0x65, 0x72, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x22, 0x2d, 0x0a, 0x09, 0x4c,
	0x61, 0x79, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x41, 0x53, 0x53, 0x45,
	0x54, 0x53, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x46, 0x4f, 0x47, 0x10, 0x01, 0x12, 0x0b, 0x0a,
	0x07, 0x4d, 0x41, 0x52, 0x4b, 0x45, 0x52, 0x53, 0x10, 0x02, 0x42, 0x0b, 0x0a, 0x09, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x22, 0xaf, 0x06, 0x0a, 0x0a, 0x41, 0x73, 0x73, 0x65,
	0x74, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x69,
	0x73, 0x69, 0x62, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x76, 0x69, 0x73,
	0x69, 0x62, 0x6c, 0x65, 0x12, 0x24, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x10, 0x2e, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x4c, 0x61, 0x79, 0x65, 0x72,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x2f, 0x0a, 0x06, 0x61, 0x73,
	0x73, 0x65, 0x74, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x41, 0x73, 0x73,
	0x65, 0x74, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x06, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x1a, 0x4c, 0x0a, 0x0b, 0x41,
	0x73, 0x73, 0x65, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x27, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x41, 0x73,
	0x73, 0x65, 0x74, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0xbd, 0x04, 0x0a, 0x05, 0x41, 0x73,
	0x73, 0x65, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x2f, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1b, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x41,
	0x73, 0x73, 0x65, 0x74, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x05, 0x2e, 0x53, 0x69, 0x7a, 0x65, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12,
	0x3e, 0x0a, 0x09, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x2e,
	0x41, 0x73, 0x73, 0x65, 0x74, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x6f, 0x72, 0x6d, 0x52, 0x09, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x12,
	0x49, 0x0a, 0x0b, 0x63, 0x61, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x4c, 0x61, 0x79, 0x65,
	0x72, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x43, 0x61, 0x6c,
	0x69, 0x62, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0b, 0x63, 0x61, 0x6c, 0x69,
	0x62, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x0a, 0x73, 0x6e,
	0x61, 0x70, 0x54, 0x6f, 0x47, 0x72, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x48, 0x01,
	0x52, 0x0a, 0x73, 0x6e, 0x61, 0x70, 0x54, 0x6f, 0x47, 0x72, 0x69, 0x64, 0x88, 0x01, 0x01, 0x1a,
	0x76, 0x0a, 0x0e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72,
	0x6d, 0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x01, 0x78, 0x12,
	0x0c, 0x0a, 0x01, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x01, 0x79, 0x12, 0x1a, 0x0a,
	0x08, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x08, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64,
	0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12,
	0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x1a, 0x6e, 0x0a, 0x10, 0x41, 0x73, 0x73, 0x65, 0x74,
	0x43, 0x61, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x78,
	0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x78, 0x4f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x79, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x79, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x70, 0x69, 0x58, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x70,
	0x70, 0x69, 0x58, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x70, 0x69, 0x59, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x04, 0x70, 0x70, 0x69, 0x59, 0x22, 0x21, 0x0a, 0x09, 0x41, 0x73, 0x73, 0x65, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x09, 0x0a, 0x05, 0x49, 0x4d, 0x41, 0x47, 0x45, 0x10, 0x00, 0x12,
	0x09, 0x0a, 0x05, 0x56, 0x49, 0x44, 0x45, 0x4f, 0x10, 0x01, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x63,
	0x61, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x73,
	0x6e, 0x61, 0x70, 0x54, 0x6f, 0x47, 0x72, 0x69, 0x64, 0x22, 0xb9, 0x06, 0x0a, 0x08, 0x46, 0x6f,
	0x67, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x69,
	0x73, 0x69, 0x62, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x76, 0x69, 0x73,
	0x69, 0x62, 0x6c, 0x65, 0x12, 0x24, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x10, 0x2e, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x4c, 0x61, 0x79, 0x65, 0x72,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x39, 0x0a, 0x0c, 0x6c, 0x69,
	0x67, 0x68, 0x74, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x46, 0x6f, 0x67, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x4c, 0x69, 0x67, 0x68,
	0x74, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x0c, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x53, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x43, 0x0a, 0x13, 0x6f, 0x62, 0x73, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x6c, 0x79, 0x67, 0x6f, 0x6e, 0x73, 0x18, 0x07, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x46, 0x6f, 0x67, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x50, 0x6f,
	0x6c, 0x79, 0x67, 0x6f, 0x6e, 0x52, 0x13, 0x6f, 0x62, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x50, 0x6f, 0x6c, 0x79, 0x67, 0x6f, 0x6e, 0x73, 0x12, 0x33, 0x0a, 0x0b, 0x66, 0x6f,
	0x67, 0x50, 0x6f, 0x6c, 0x79, 0x67, 0x6f, 0x6e, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x46, 0x6f, 0x67, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x50, 0x6f, 0x6c, 0x79, 0x67,
	0x6f, 0x6e, 0x52, 0x0b, 0x66, 0x6f, 0x67, 0x50, 0x6f, 0x6c, 0x79, 0x67, 0x6f, 0x6e, 0x73, 0x12,
	0x3d, 0x0a, 0x10, 0x66, 0x6f, 0x67, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x50, 0x6f, 0x6c, 0x79, 0x67,
	0x6f, 0x6e, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x46, 0x6f, 0x67, 0x4c,
	0x61, 0x79, 0x65, 0x72, 0x2e, 0x50, 0x6f, 0x6c, 0x79, 0x67, 0x6f, 0x6e, 0x52, 0x10, 0x66, 0x6f,
	0x67, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x50, 0x6f, 0x6c, 0x79, 0x67, 0x6f, 0x6e, 0x73, 0x1a, 0x86,
	0x02, 0x0a, 0x0b, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x25,
	0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x09, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x32, 0x64, 0x52, 0x08, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x30, 0x0a, 0x13, 0x62, 0x72, 0x69, 0x67, 0x68, 0x74, 0x4c,
	0x69, 0x67, 0x68, 0x74, 0x44, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x13, 0x62, 0x72, 0x69, 0x67, 0x68, 0x74, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x44,
	0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x64, 0x69, 0x6d, 0x4c, 0x69,
	0x67, 0x68, 0x74, 0x44, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x10, 0x64, 0x69, 0x6d, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x44, 0x69, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x12, 0x31, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x46, 0x6f, 0x67, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x4c, 0x69,
	0x67, 0x68, 0x74, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x52,
	0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x1a, 0x3f, 0x0a, 0x05, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12,
	0x0c, 0x0a, 0x01, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x01, 0x72, 0x12, 0x0c, 0x0a,
	0x01, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x01, 0x67, 0x12, 0x0c, 0x0a, 0x01, 0x62,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x01, 0x62, 0x12, 0x0c, 0x0a, 0x01, 0x61, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x01, 0x61, 0x1a, 0xcb, 0x01, 0x0a, 0x07, 0x50, 0x6f, 0x6c, 0x79,
	0x67, 0x6f, 0x6e, 0x12, 0x31, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1d, 0x2e, 0x46, 0x6f, 0x67, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x50, 0x6f, 0x6c,
	0x79, 0x67, 0x6f, 0x6e, 0x2e, 0x50, 0x6f, 0x6c, 0x79, 0x67, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x27, 0x0a, 0x09, 0x76, 0x65, 0x72, 0x74, 0x69, 0x63,
	0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x56, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x32, 0x64, 0x52, 0x09, 0x76, 0x65, 0x72, 0x74, 0x69, 0x63, 0x69, 0x65, 0x73, 0x12,
	0x26, 0x0a, 0x0e, 0x76, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x4f, 0x6e, 0x54, 0x61, 0x62, 0x6c,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x76, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65,
	0x4f, 0x6e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x22, 0x3c, 0x0a, 0x0b, 0x50, 0x6f, 0x6c, 0x79, 0x67,
	0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x07, 0x0a, 0x03, 0x46, 0x4f, 0x47, 0x10, 0x00, 0x12,
	0x0d, 0x0a, 0x09, 0x46, 0x4f, 0x47, 0x5f, 0x43, 0x4c, 0x45, 0x41, 0x52, 0x10, 0x01, 0x12, 0x15,
	0x0a, 0x11, 0x4c, 0x49, 0x47, 0x48, 0x54, 0x5f, 0x4f, 0x42, 0x53, 0x54, 0x52, 0x55, 0x43, 0x54,
	0x49, 0x4f, 0x4e, 0x10, 0x02, 0x22, 0x94, 0x01, 0x0a, 0x0b, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x72,
	0x4c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x69, 0x73,
	0x69, 0x62, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x76, 0x69, 0x73, 0x69,
	0x62, 0x6c, 0x65, 0x12, 0x24, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x10, 0x2e, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x07, 0x6d, 0x61, 0x72,
	0x6b, 0x65, 0x72, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x4d, 0x61, 0x72,
	0x6b, 0x65, 0x72, 0x52, 0x07, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x72, 0x73, 0x22, 0x41, 0x0a, 0x06,
	0x4d, 0x61, 0x72, 0x6b, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x27, 0x0a, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x4c, 0x61, 0x79,
	0x65, 0x72, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x52, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x22,
	0xa4, 0x01, 0x0a, 0x0b, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x12,
	0x1c, 0x0a, 0x05, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06,
	0x2e, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x52, 0x05, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x12, 0x27, 0x0a,
	0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x53,
	0x63, 0x65, 0x6e, 0x65, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x52,
	0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x1a, 0x4e, 0x0a, 0x04, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x65, 0x64, 0x69,
	0x61, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x65, 0x64,
	0x69, 0x61, 0x54, 0x79, 0x70, 0x65, 0x42, 0x2b, 0x5a, 0x29, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x75, 0x74, 0x6d, 0x61, 0x6e, 0x39, 0x36, 0x2f, 0x66, 0x61,
	0x6e, 0x74, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x2e, 0x69, 0x6f, 0x2f, 0x74, 0x72, 0x61, 0x63,
	0x6b, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_protos_scene_proto_rawDescOnce sync.Once
	file_protos_scene_proto_rawDescData = file_protos_scene_proto_rawDesc
)

func file_protos_scene_proto_rawDescGZIP() []byte {
	file_protos_scene_proto_rawDescOnce.Do(func() {
		file_protos_scene_proto_rawDescData = protoimpl.X.CompressGZIP(file_protos_scene_proto_rawDescData)
	})
	return file_protos_scene_proto_rawDescData
}

var file_protos_scene_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_protos_scene_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_protos_scene_proto_goTypes = []any{
	(Layer_LayerType)(0),                      // 0: Layer.LayerType
	(AssetLayer_Asset_AssetType)(0),           // 1: AssetLayer.Asset.AssetType
	(FogLayer_Polygon_PolygonType)(0),         // 2: FogLayer.Polygon.PolygonType
	(*Scene)(nil),                             // 3: Scene
	(*TableOptions)(nil),                      // 4: TableOptions
	(*Vector2D)(nil),                          // 5: Vector2d
	(*Size)(nil),                              // 6: Size
	(*Layer)(nil),                             // 7: Layer
	(*AssetLayer)(nil),                        // 8: AssetLayer
	(*FogLayer)(nil),                          // 9: FogLayer
	(*MarkerLayer)(nil),                       // 10: MarkerLayer
	(*Marker)(nil),                            // 11: Marker
	(*SceneExport)(nil),                       // 12: SceneExport
	nil,                                       // 13: AssetLayer.AssetsEntry
	(*AssetLayer_Asset)(nil),                  // 14: AssetLayer.Asset
	(*AssetLayer_Asset_AssetTransform)(nil),   // 15: AssetLayer.Asset.AssetTransform
	(*AssetLayer_Asset_AssetCalibration)(nil), // 16: AssetLayer.Asset.AssetCalibration
	(*FogLayer_LightSource)(nil),              // 17: FogLayer.LightSource
	(*FogLayer_Polygon)(nil),                  // 18: FogLayer.Polygon
	(*FogLayer_LightSource_Color)(nil),        // 19: FogLayer.LightSource.Color
	(*SceneExport_File)(nil),                  // 20: SceneExport.File
}
var file_protos_scene_proto_depIdxs = []int32{
	4,  // 0: Scene.table:type_name -> TableOptions
	7,  // 1: Scene.layers:type_name -> Layer
	5,  // 2: TableOptions.offset:type_name -> Vector2d
	8,  // 3: Layer.assetLayer:type_name -> AssetLayer
	9,  // 4: Layer.fogLayer:type_name -> FogLayer
	10, // 5: Layer.markerLayer:type_name -> MarkerLayer
	0,  // 6: AssetLayer.type:type_name -> Layer.LayerType
	13, // 7: AssetLayer.assets:type_name -> AssetLayer.AssetsEntry
	0,  // 8: FogLayer.type:type_name -> Layer.LayerType
	17, // 9: FogLayer.lightSources:type_name -> FogLayer.LightSource
	18, // 10: FogLayer.obstructionPolygons:type_name -> FogLayer.Polygon
	18, // 11: FogLayer.fogPolygons:type_name -> FogLayer.Polygon
	18, // 12: FogLayer.fogClearPolygons:type_name -> FogLayer.Polygon
	0,  // 13: MarkerLayer.type:type_name -> Layer.LayerType
	11, // 14: MarkerLayer.markers:type_name -> Marker
	14, // 15: Marker.asset:type_name -> AssetLayer.Asset
	3,  // 16: SceneExport.scene:type_name -> Scene
	20, // 17: SceneExport.files:type_name -> SceneExport.File
	14, // 18: AssetLayer.AssetsEntry.value:type_name -> AssetLayer.Asset
	1,  // 19: AssetLayer.Asset.type:type_name -> AssetLayer.Asset.AssetType
	6,  // 20: AssetLayer.Asset.size:type_name -> Size
	15, // 21: AssetLayer.Asset.transform:type_name -> AssetLayer.Asset.AssetTransform
	16, // 22: AssetLayer.Asset.calibration:type_name -> AssetLayer.Asset.AssetCalibration
	5,  // 23: FogLayer.LightSource.position:type_name -> Vector2d
	19, // 24: FogLayer.LightSource.color:type_name -> FogLayer.LightSource.Color
	2,  // 25: FogLayer.Polygon.type:type_name -> FogLayer.Polygon.PolygonType
	5,  // 26: FogLayer.Polygon.verticies:type_name -> Vector2d
	27, // [27:27] is the sub-list for method output_type
	27, // [27:27] is the sub-list for method input_type
	27, // [27:27] is the sub-list for extension type_name
	27, // [27:27] is the sub-list for extension extendee
	0,  // [0:27] is the sub-list for field type_name
}

func init() { file_protos_scene_proto_init() }
func file_protos_scene_proto_init() {
	if File_protos_scene_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_protos_scene_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*Scene); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_scene_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*TableOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_scene_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*Vector2D); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_scene_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*Size); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_scene_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*Layer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_scene_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*AssetLayer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_scene_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*FogLayer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_scene_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*MarkerLayer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_scene_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*Marker); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_scene_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*SceneExport); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_scene_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*AssetLayer_Asset); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_scene_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*AssetLayer_Asset_AssetTransform); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_scene_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*AssetLayer_Asset_AssetCalibration); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_scene_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*FogLayer_LightSource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_scene_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*FogLayer_Polygon); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_scene_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*FogLayer_LightSource_Color); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_scene_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*SceneExport_File); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_protos_scene_proto_msgTypes[4].OneofWrappers = []any{
		(*Layer_AssetLayer)(nil),
		(*Layer_FogLayer)(nil),
		(*Layer_MarkerLayer)(nil),
	}
	file_protos_scene_proto_msgTypes[11].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protos_scene_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_protos_scene_proto_goTypes,
		DependencyIndexes: file_protos_scene_proto_depIdxs,
		EnumInfos:         file_protos_scene_proto_enumTypes,
		MessageInfos:      file_protos_scene_proto_msgTypes,
	}.Build()
	File_protos_scene_proto = out.File
	file_protos_scene_proto_rawDesc = nil
	file_protos_scene_proto_goTypes = nil
	file_protos_scene_proto_depIdxs = nil
}
